$(function() {
  var root = "<%= Discourse.base_url %>"
	$(".full-calendar").each(function() {
		var url = $(this).attr("data-calendar-url")
		$(this).fullCalendar(
		{
			events: url, 
			titleFormat: {
				month: "'Kalenteri: 'MMMM"
			},
      dayNames: ['Sunnuntai', 'Maanantai', 'Tiistai', 'Keskiviikko',
 'Torstai', 'Perjantai', 'Lauantai'],
      dayNamesShort: ['Su', 'Ma', 'Ti', 'Ke', 'To', 'Pe', 'La'],
      monthNames: ['tammikuu', 'helmikuu', 'maaliskuu', 'huhtikuu', 'toukokuu', 'kesäkuu', 'heinäkuu',
 'elokuu', 'syyskuu', 'lokakuu', 'marraskuu', 'joulukuu'],
      timeFormat: '',
      firstDay: 1,
      eventRender: function(event, element) {
        var url = event.description;
        if(!url) return;
        $(element).first("a").attr("href", url)
      },
      dayRender: function(date, cell) { 
        var formattedDate = date.getDate() + "." + date.getMonth() + "." + date.getFullYear();
        <% if @loggedIn %>
        var href = root + '/create_event/' + formattedDate;
        <% else %>
        var href = root + '/signup/';
        <% end %>

        var a = $("<a/>", { href: root + '/create_event/' + formattedDate })
          .append($('<i class="font-icon-plus-sign"/>'))
        var create_event = $('<div class="fc-create-event"/>').append(a);

        $(cell).find(".fc-day-number").before(create_event);
        return cell;
      },
      buttonText: {
        prev:     '&lsaquo;', // <
        next:     '&rsaquo;', // >
        prevYear: '&laquo;',  // <<
        nextYear: '&raquo;',  // >>
        today:    'tänään',
        month:    'kuukausi',
        week:     'viikko',
        day:      'päivä'
      }
		});
	})
});

customFilter = function (container, layoutMode){
  var filters = {}
  var $container = $('#' + container);
  
  $container.imagesLoaded(function() {
    $container.isotope({
      // options
      animationEngine: 'best-available',
      itemSelector : '.item-thumbs',
      layoutMode : layoutMode? layoutMode: 'straightDown',
      filter: ':not(.past)'
    });
  });

  
  // filter items when filter link is clicked
  var $optionSets = $('#' + container + '-options .option-set'),
    $optionLinks = $optionSets.find('a');

/*
  var filterFns = {
    withinMonth: function() {
      var date = $(this).attr('data-date');
      if(!date) return false;
      date = new Date(date);

      var today = new Date();
      var dayOffset = 30;
      var millisecondOffset = dayOffset * 24 * 60 * 60 * 1000;
      var endTime = today.getTime() + millisecondOffset; 

      return date.getTime() < endTime;
    }
  };
*/

  $optionLinks.click(function(){
    var $this = $(this);
    // don't proceed if already selected
    if ( $this.hasClass('selected') ) {
      return false;
    }
    var $optionSet = $this.parents('.option-set');
    $optionSet.find('.selected').removeClass('selected');
    $this.addClass('selected');
  
    // make option object dynamically, i.e. { filter: '.my-filter-class' }
    var options = {},
      key = $optionSet.attr('data-option-key'),
      value = $this.attr('data-option-value');

    filters[ key ] = value;

    var isoFilters = [];
    for ( var prop in filters ) {
      isoFilters.push( filters[ prop ] )
    }
    var selector = isoFilters.join('');
    
    $container.isotope( { filter: selector } );
    
    return false;
  });
}

$(document).ready(function(){
  customFilter('projects', 'fitRows');
  customFilter('eventslist', 'straightDown');
});